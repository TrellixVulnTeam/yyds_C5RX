{"version":3,"sources":["webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.html"],"names":["routes","path","component","LoginPage","TabsPage","LoginPageRoutingModule","NgModule","imports","RouterModule","exports","LoginPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","declarations","router","ionicAuthService","fb","navCtrl","successMsg","errorMsg","error_msg","type","message","userForm","group","email","FormControl","Validators","password","value","signinUser","then","response","console","log","navigateForward","error","navigateByUrl","Router","IonicAuthService","FormBuilder","NavController","Component","selector","template"],"mappings":"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","file":"src_app_login_login_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\nimport { TabsPage } from '../tabs/tabs.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  },\n  {\n    path:'tabs',\n    component: TabsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { TabsPage} from '../tabs/tabs.page'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [LoginPage, TabsPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { IonicAuthService } from '../ionic-auth.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\n\nexport class LoginPage implements OnInit {\n\n  userForm: FormGroup;\n  successMsg: string = '';\n  errorMsg: string = '';\n  \n\n  error_msg = {\n    'email': [\n      { \n        type: 'required', \n        message: 'Provide email.' \n      },\n      { \n        type: 'pattern', \n        message: 'Email is not valid.' \n      }\n    ],\n    'password': [\n      { \n        type: 'required', \n        message: 'Password is required.' \n      },\n      { \n        type: 'minlength', \n        message: 'Password length should be 6 characters long.' \n      }\n    ]\n  };\n\n  constructor(\n    private router: Router,\n    private ionicAuthService: IonicAuthService,\n    private fb: FormBuilder,\n    private navCtrl: NavController\n  ) { }\n\n  ngOnInit() {\n    this.userForm = this.fb.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(6),\n        Validators.required\n      ])),\n    });\n  }\n\n  signIn(value) {\n    this.ionicAuthService.signinUser(value)\n      .then((response) => {\n        console.log(response)\n        this.errorMsg = \"\";\n        //this.router.navigateByUrl('test');\n        //this.router.navigate(['tabs']);\n        this.navCtrl.navigateForward(['tab/tabs/tab1']);\n      }, error => {\n        this.errorMsg = error.message;\n        this.successMsg = \"\";\n      })\n  }\n\n  goToSignup() {\n    this.router.navigateByUrl('register');\n  }\n\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5wYWdlLnNjc3MifQ== */\";","export default \"<!--<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-back-button></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>Log in</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <form>\\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Email</ion-label>\\n        <ion-input type=\\\"text\\\" required></ion-input>\\n      </ion-item>\\n  \\n      <ion-item lines=\\\"full\\\">\\n        <ion-label position=\\\"floating\\\">Password</ion-label>\\n        <ion-input type=\\\"password\\\" required></ion-input>\\n      </ion-item>\\n  \\n      <ion-item lines='none'>\\n        <a routerLink='/register'>Create Account</a>\\n      </ion-item>\\n  \\n      <ion-row>\\n        <ion-col>\\n                                  //routerLink just for testing, should be removed! \\n          <ion-button type=\\\"submit\\\" routerLink='/tab/tabs/tab1' color=\\\"dark\\\" expand=\\\"block\\\">LOG IN</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n  </ion-content>\\n\\n-->\\n\\n<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"signIn(userForm.value)\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    \\n    <ng-container *ngFor=\\\"let error of error_msg.email\\\">\\n      <div *ngIf=\\\"userForm.get('email').hasError(error.type) && (userForm.get('email').dirty || userForm.get('email').touched)\\\">\\n        {{ error.message }}\\n      </div>\\n    </ng-container>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    \\n    <ng-container *ngFor=\\\"let error of error_msg.password\\\">\\n        <div *ngIf=\\\"userForm.get('password').hasError(error.type) && (userForm.get('password').dirty || userForm.get('password').touched)\\\">\\n          {{ error.message }}\\n        </div>\\n    </ng-container>\\n\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!userForm.valid\\\">Signin</ion-button>\\n    \\n    <label class=\\\"ion-text-center\\\" color=\\\"danger\\\">{{errorMsg}}</label>\\n  </form>\\n  <p class=\\\"ion-text-center\\\">Not registered yet? <a (click)=\\\"goToSignup()\\\">Register</a></p>\\n</ion-content>\\n\";"]}